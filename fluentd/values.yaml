# Default values for fluentd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

elastic:
  storageClass: elastic-sc
  storageNameSpace: elk
  serviceName: elasticsearch
  serviseNameSpace: elk
  servicePort: 9200
  serviceInterPort: 9300

statefulset:
  name: es-cluster
  nameSpace: elk
  labels:
    app: elasticsearch
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  specContainerName: elasticsearch
  image: elasticsearch:7.17.5
  imagePullPolicy: Always
  resources:
      limits:
        cpu: 100m
      requests:
        cpu: 10m
  ports:
    containerPort: 9200
    containerInterPort: 9300
  volumeMounts:
  - name: data
    mountPath: /usr/share/elasticsearch/data
  metadata:
    name: data
    labels:
      app: elasticsearch
  specResourceRequestStorage: 200Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: fluentd
  labels:
    app: fluentd
  serviceAccountName: fluentd
  serviceAccountNameSpace: kube-system
  selectorName: fluentd

clusterRole:
  create: true
  name: fluentd
  labels:
    app: fluentd
  
clusterRoleBinding:
  create: true
  name: fluentd
  labels:
    app: fluentd
  nameSpace: kube-system

daemonset:
  name: fluentd
  nameSpace: kube-system
  labels:
    app: fluentd
  serviceAccountName: fluentd
  serviceAccountNameSpace: kube-system
  selectorName: fluentd
  nameOverride: ""
  fullnameOverride: ""
  specContainerName: fluentd
  image: fluent/fluentd-kubernetes-daemonset:v1.13.3-debian-elasticsearch7-1.0
  limitMemory: 512Mi
  requestMemory: 200Mi
  requestCpu: 100m
  terminationPeriod: 30

rbac:
  create: true

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
